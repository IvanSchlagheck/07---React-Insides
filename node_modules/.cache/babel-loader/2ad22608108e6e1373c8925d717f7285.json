{"ast":null,"code":"var _jsxFileName = \"/home/ivansch/code/IvanSchlagheck/React/07 - React-Insides/src/components/UI/Button/Demo/DemoOutput.js\";\nimport React from \"react\";\nimport MyParagraph from \"./MyParagraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DemoOutput = props => {\n  return /*#__PURE__*/_jsxDEV(MyParagraph, {\n    children: props.show ? 'This is New!' : ''\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this); // Instead of conditionally rendering the whole html element, \n  //I condtition the Text inside checking if props.show is truethy\n};\n\n_c = DemoOutput;\nexport default React.memoDemoOutput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DemoOutput\");","map":{"version":3,"sources":["/home/ivansch/code/IvanSchlagheck/React/07 - React-Insides/src/components/UI/Button/Demo/DemoOutput.js"],"names":["React","MyParagraph","DemoOutput","props","show","memoDemoOutput"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,sBAAO,QAAC,WAAD;AAAA,cAAcA,KAAK,CAACC,IAAN,GAAa,cAAb,GAA8B;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP,CAD4B,CACyC;AACrB;AACjD,CAHD;;KAAMF,U;AAIN,eAAeF,KAAK,CAACK,cAArB","sourcesContent":["import React from \"react\";\nimport MyParagraph from \"./MyParagraph\";\n\nconst DemoOutput = (props) => {\n  return <MyParagraph>{props.show ? 'This is New!' : ''}</MyParagraph> // Instead of conditionally rendering the whole html element, \n                                                  //I condtition the Text inside checking if props.show is truethy\n}\nexport default React.memoDemoOutput;"]},"metadata":{},"sourceType":"module"}